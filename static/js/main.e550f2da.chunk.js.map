{"version":3,"sources":["Utils/Common.js","Login.js","Dashboard.js","Home.js","Utils/PrivateRoute.js","Utils/PublicRoute.js","App.js","index.js"],"names":["getUser","userStr","sessionStorage","getItem","JSON","parse","getToken","removeUserSession","removeItem","setUserSession","token","user","setItem","stringify","useFormInput","initialValue","useState","value","setValue","onChange","e","target","Login","props","loading","setLoading","username","password","error","setError","style","color","backgroundColor","fontFamily","margin","width","border","padding","textAlign","height","borderRadius","id","className","type","placeholder","autoComplete","marginTop","onClick","axios","post","then","response","data","history","push","catch","status","message","disabled","Dashboard","firstName","lastName","Home","PrivateRoute","Component","component","rest","render","to","pathname","state","from","location","PublicRoute","App","authLoading","setAuthLoading","useEffect","get","activeClassName","exact","path","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.e550f2da.chunk.js","sourcesContent":["// return the user data from the session storage\r\nexport const getUser = () => {\r\n  const userStr = sessionStorage.getItem('user');\r\n  if (userStr) return JSON.parse(userStr);\r\n  else return null;\r\n}\r\n\r\n// return the token from the session storage\r\nexport const getToken = () => {\r\n  return sessionStorage.getItem('token') || null;\r\n}\r\n\r\n// remove the token and user from the session storage\r\nexport const removeUserSession = () => {\r\n  sessionStorage.removeItem('token');\r\n  sessionStorage.removeItem('user');\r\n}\r\n\r\n// set the token and user from the session storage\r\nexport const setUserSession = (token, user) => {\r\n  sessionStorage.setItem('token', token);\r\n  sessionStorage.setItem('user', JSON.stringify(user));\r\n}","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { setUserSession } from './Utils/Common';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nfunction Login(props) {\r\n  const [loading, setLoading] = useState(false);\r\n  const username = useFormInput('');\r\n  const password = useFormInput('');\r\n  const [error, setError] = useState(null);\r\n\r\n  // handle button click of login form\r\n  const handleLogin = () => {\r\n    setError(null);\r\n    setLoading(true);\r\n    axios.post('https://api.getcountapp.com/api/v1/authenticate', { username: username.value, password: password.value }).then(response => {\r\n      setLoading(false);\r\n      setUserSession(response.data.token, response.data.user);\r\n      props.history.push('/dashboard');\r\n    }).catch(error => {\r\n      setLoading(false);\r\n      if (error.response.status === 401) setError(error.response.data.message);\r\n      else setError(\"Popunite oba polja\");\r\n    });\r\n  }\r\nconst mystyle = {\r\n      color: \"white\",\r\n      backgroundColor: \"rgb(152,152,152)\",\r\n      fontFamily: \"Arial\",\r\n      margin: \"auto\",\r\n      width: \"40%\",\r\n      border: \"5px solid rgb(220,220,220)\",\r\n      padding: \"10px\",\r\n      textAlign:\"center\", \r\n      height:\"300px\",\r\n      borderRadius:\"14px\",\r\n\r\n    }\r\n \r\n    return (\r\n      <div style={mystyle} id=\"formContent\" className=\"wrapper fadeInDown col-md-6 col-md-offset-3\">\r\n      \r\n      <h3>Login</h3><br />\r\n      <div>\r\n        Username: <br />\r\n        <input type=\"text\" style={{textAlign:\"center\"}} placeholder=\"Enter email\" className=\"form-control\" {...username} autoComplete=\"new-password\" />\r\n      </div>\r\n      <div style={{ marginTop: 10 }}>\r\n        Password: <br />\r\n        <input type=\"password\" placeholder=\"Enter password\" style={{textAlign:\"center\"}} className=\"form-control\" {...password} autoComplete=\"new-password\" />\r\n      </div>\r\n      {error && <><small style={{ color: 'red' }}>{error}</small><br /></>}<br />\r\n      <button className=\"btn btn-success btn-sm\" onClick={handleLogin} disabled={loading}>Login</button><br />\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nconst useFormInput = initialValue => {\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  const handleChange = e => {\r\n    setValue(e.target.value);\r\n  }\r\n  return {\r\n    value,\r\n    onChange: handleChange\r\n  }\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport { getUser, removeUserSession } from './Utils/Common';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction Dashboard(props) {\r\n  const user = getUser();\r\n\r\n  // handle click event of logout button\r\n  const handleLogout = () => {\r\n    removeUserSession();\r\n    props.history.push('/login');\r\n  }\r\n\r\n  return (\r\n    <div className=\"bg-light \">\r\n      <h2>Dobrodo≈°li {user.firstName} {user.lastName}!<br /></h2>\r\n      <br />\r\n          <input type=\"button\" className=\"btn btn-secondary\" onClick={handleLogout} value=\"Logout\" />\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","import React from 'react';\r\n\r\nfunction Home() {\r\n  return (\r\n    <div>\r\n      Welcome to the Home Page!\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { getToken } from './Common';\r\n\r\n// handle the private routes\r\nfunction PrivateRoute({ component: Component, ...rest }) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => getToken() ? <Component {...props} /> : <Redirect to={{ pathname: '/login', state: { from: props.location } }} />}\r\n    />\r\n  )\r\n}\r\n\r\nexport default PrivateRoute;","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { getToken } from './Common';\r\n\r\n// handle the public routes\r\nfunction PublicRoute({ component: Component, ...rest }) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => !getToken() ? <Component {...props} /> : <Redirect to={{ pathname: '/dashboard' }} />}\r\n    />\r\n  )\r\n}\r\n\r\nexport default PublicRoute;","import React, { useState, useEffect } from 'react';\r\nimport { BrowserRouter, Switch, Route, NavLink } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Login from './Login';\r\nimport Dashboard from './Dashboard';\r\nimport Home from './Home';\r\nimport PrivateRoute from './Utils/PrivateRoute';\r\nimport PublicRoute from './Utils/PublicRoute';\r\nimport { getToken, /*removeUserSession,*/ setUserSession } from './Utils/Common';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction App() {\r\n  const [authLoading, setAuthLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const token = getToken();\r\n    if (!token) {\r\n      return;\r\n    }\r\n    axios.get(`https://api.getcountapp.com/api/v1/users/me= ${token}`).then(response => {\r\n      setUserSession(response.data.token, response.data.user);\r\n      setAuthLoading(false);\r\n    }).catch(error => {\r\n     // removeUserSession();\r\n      setAuthLoading(false);\r\n    });\r\n  }, []);\r\n\r\n  if (authLoading && getToken()) {\r\n    return <div className=\"content\">Provjera autentikacije...</div>\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <BrowserRouter>\r\n        <div>\r\n          <div className=\"navbar navbar-default navbar-fixed-top\">\r\n{/*             <NavLink exact activeClassName=\"active\" to=\"/\">Home</NavLink>\r\n */}            <NavLink activeClassName=\"active\" className=\"navbar-toggler btn\" to=\"/login\">Login</NavLink><small></small>\r\n{/*             <NavLink activeClassName=\"active\" to=\"/dashboard\">Dashboard</NavLink><small>(Access with token only)</small>\r\n */}          </div>\r\n          <div className=\"content form-group\">\r\n            <Switch>\r\n              <Route exact path=\"/\" component={Home} />\r\n              <PublicRoute path=\"/login\" component={Login} />\r\n              <PrivateRoute path=\"/dashboard\" component={Dashboard} />\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}